# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.data.cassandra.keyspace-name=cassandra_test1
spring.data.cassandra.username=ics_admin 
spring.data.cassandra.password= icsadminsjc01p04
spring.data.cassandra.keyspace-name=qualys_ics
#spring.data.cassandra.contact-points=localhost 15April21
spring.data.cassandra.contact-points=cassdb01.p04.eng.sjc01.qualys.com
#spring.data.cassandra.port=9042  15April21
spring.data.cassandra.port=50126
spring.data.cassandra.schema-action=none
#spring.data.cassandra.schema-action=create_if_not_exists

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/orclaish
spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/AISHDB
spring.datasource.username=aishgholkar
spring.datasource.password=aishgholkar
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
server.port=8090